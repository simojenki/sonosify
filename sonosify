#!/usr/bin/env sh

set -o errexit

log() {
    if [ "${SONOSIFY_LOG}" == "true" ]; then
        echo $1 1>&2
    fi
}

USAGE="Usage: `basename $0` input output"

if [ $# -ne 2 ]; then
    echo $USAGE >&2
    exit 1
fi

SONOSIFY_TARGET="${SONOSIFY_TARGET:-}"
I=$1
O=$2

[ ! -e "${I}" ] && \
    echo "Input file ${I} does not exist" >&2 && \
    exit 1

stream0=$(ffprobe -select_streams 0 -show_streams "${I}" 2>/dev/null)

codec_type=$(echo "${stream0}" | grep "^codec_type=" | cut -d = -f 2)
if [ "${codec_type}" != "audio" ]; then
    echo "Expected stream 0 to be audio, but is ${codec_type}" >&2
    exit 1
fi

codec_name=$(echo "${stream0}" | grep "^codec_name=" | cut -d = -f 2)
sample_fmt=$(echo "${stream0}" | grep "^sample_fmt=" | cut -d = -f 2)
sample_rate=$(echo "${stream0}" | grep "^sample_rate=" | cut -d = -f 2)

case "${codec_name}" in
    mp3)
        log "sonosify: mp3@${sample_fmt}:${sample_rate} -> mp3@${sample_fmt}:${sample_rate}"
        ffmpeg \
            -i "${I}" \
            -map 0:a \
            -c:a copy \
            -map_metadata -1 \
            -flush_packets 1 \
            -f mp3 \
            "${O}"
    ;;
    flac)
        if [ "${SONOSIFY_TARGET}" == "S1" ]; then
            out_sample_fmt="s16"
        else
            out_sample_fmt="${sample_fmt}"
        fi

        # flac sample rates -> https://datatracker.ietf.org/doc/html/draft-xiph-cellar-flac-00#section-10.19.4
        case "${sample_rate}" in
            88200)  out_sample_rate="44100";;
            96000)  out_sample_rate="48000";;
            176400) out_sample_rate="44100";;
            192000) out_sample_rate="48000";;
            *)      out_sample_rate="${sample_rate}";;
        esac

        log "sonosify: flac@${sample_fmt}:${sample_rate} -> flac@${out_sample_fmt}:${out_sample_rate}"
        if [ "${sample_fmt}" == "${out_sample_fmt}" ] && [ "${sample_rate}" == "${out_sample_rate}" ]; then
            af="anull"
        else 
            af="aresample=resampler=soxr:out_sample_fmt=${out_sample_fmt}:out_sample_rate=${out_sample_rate}:first_pts=0"
        fi
        ffmpeg \
            -i "${I}" \
            -af "${af}" \
            -map_metadata -1 \
            -flush_packets 1 \
            -f flac \
            "${O}"
    ;;
    alac)
        if [ "${SONOSIFY_TARGET}" == "S1" ]; then
            out_sample_fmt="s16"
        else
            out_sample_fmt="${sample_fmt}"
        fi

        case "${sample_rate}" in
            88200)  out_sample_rate="44100";;
            96000)  out_sample_rate="48000";;
            *)      out_sample_rate="${sample_rate}";;
        esac

        log "sonosify: alac@${sample_fmt}:${sample_rate} -> flac@${out_sample_fmt}:${out_sample_rate}"
        if [ "${sample_fmt}" == "${out_sample_fmt}" ] && [ "${sample_rate}" == "${out_sample_rate}" ]; then
            af="anull"
        else 
            af="aresample=resampler=soxr:out_sample_fmt=${out_sample_fmt}:out_sample_rate=${out_sample_rate}:first_pts=0"
        fi
        ffmpeg \
            -i "${I}" \
            -af "${af}" \
            -map_metadata -1 \
            -flush_packets 1 \
            -f flac \
            "${O}"
    ;;
    aac)
        log "sonosify: aac -> flac"

        ffmpeg \
            -i "${I}" \
            -map_metadata -1 \
            -flush_packets 1 \
            -f flac \
            "${O}"
    ;;
    *)
        log "sonosify: File ${I} has an unsupported codec ${codec_name}"
        exit 1
    ;;
esac
